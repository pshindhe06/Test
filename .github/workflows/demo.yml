name: Salesforce Release and Deployment

on:
  push:
    branches:
      - demo/*  # Trigger on release branch creation
  workflow_dispatch:
    inputs:
      action:
        description: 'Select action to trigger'
        required: true
        type: choice
        options:
          - validate
          - deploy

jobs:
  validate-prod:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'validate'}}
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v2

      - name: 'Installing Node.js for SFDX CLI'
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Set up Salesforce CLI
        run: |
          npm install @salesforce/cli --global

      - name: Authenticate to Salesforce Org (Auth File)
        run: |
          echo ${{ secrets.SFDX_DEMO }} > ./SFDX_INTEGRATION_URL.txt
          npx sfdx auth:sfdxurl:store -f ./SFDX_INTEGRATION_URL.txt -a prakash06
          
      - name: Extract Test Classes from package.xml
        id: extract_tests
        run: |
          # Extract test classes from the package.xml
          test_classes=$(grep -oP "<members>([A-Za-z0-9_]+)</members>" manifest/package.xml | sed -E 's/<members>(.*)<\/members>/\1/')
          test_classes=$(echo "$test_classes" | grep -i "Test")
          
          # Set the test classes as an environment variable
          if [ -n "$test_classes" ]; then
            echo "test_classes=$test_classes" >> $GITHUB_ENV
          else
            echo "test_classes=" >> $GITHUB_ENV
          fi

      - name: Validate Delta Changes in Salesforce Prod Org
        id: validate_deployment
        run: |
          echo "Validating delta changes (new, modified, deleted components) in Salesforce Prod Org..."
          
          # Check if there are test classes to run
          if [ -n "$test_classes" ]; then
            echo "Running specified tests: $test_classes"
            sf project deploy validate -x manifest/package.xml -o prakash06 --test-level RunSpecifiedTests --tests "$test_classes" --json
          else
            echo "No test classes found. Running with NoTestRun."
            sf project deploy validate -x manifest/package.xml -o prakash06 --test-level NoRunTests --json
          fi

  deploy-prod:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'deploy'}}
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v2

      - name: 'Installing Node.js for SFDX CLI'
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Set up Salesforce CLI
        run: |
          npm install @salesforce/cli --global

      - name: Authenticate to Salesforce Org (Auth File)
        run: |
          echo ${{ secrets.SFDX_DEMO }} > ./SFDX_INTEGRATION_URL.txt
          npx sfdx auth:sfdxurl:store -f ./SFDX_INTEGRATION_URL.txt -a prakash06
          
      - name: Extract Test Classes from package.xml
        id: extract_tests
        run: |
          # Extract test classes from the package.xml
          test_classes=$(grep -oP "<members>([A-Za-z0-9_]+)</members>" manifest/package.xml | sed -E 's/<members>(.*)<\/members>/\1/')
          test_classes=$(echo "$test_classes" | grep -i "Test")
          
          # Set the test classes as an environment variable
          if [ -n "$test_classes" ]; then
            echo "test_classes=$test_classes" >> $GITHUB_ENV
          else
            echo "test_classes=" >> $GITHUB_ENV
          fi

      - name: Only deploy if validation was successful
        run: |
           sf project deploy start -x manifest/package.xml -o prakash06

      - name: Run only specified test classes during deployment
        run: |
          # Ensure that only the test classes defined in the package.xml are deployed
          if [ -n "$test_classes" ]; then
            echo "Running specified tests: $test_classes"
            sf project deploy start -x manifest/package.xml -o prakash06 --test-level RunSpecifiedTests --tests "$test_classes" --json
          else
            echo "No test classes found. Running with NoTestRun."
            sf project deploy start -x manifest/package.xml -o prakash06 --test-level NoRunTests --json
          fi

      - name: Sync changes from release to master
        run: |
          # Check out master branch
          git checkout main
          
          # Pull the latest changes from the master branch to avoid conflicts
          git pull origin main

          # Merge the release branch into master
          git merge ${{ github.ref }} --no-ff -m "Merge release branch into master"

          # Push the changes back to master
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
