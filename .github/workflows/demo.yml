name: Salesforce Release and Deployment

on:
  push:
    branches:
      - release/*  # Trigger on release branch creation
  workflow_dispatch:
    inputs:
      action:
        description: 'Select action to trigger'
        required: true
        type: choice
        options:
          - validate
          - deploy
          - both

jobs:
  validate-prod:
    runs-on: ubuntu-latest
    # Ensure validate-prod runs when 'validate' or 'both' is selected, or for release branches
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/release/') || github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'validate' || github.event.inputs.action == 'both' }}

    steps:
      # Checkout the release branch
      - name: Checkout Release Branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Set up Salesforce CLI
      - name: Set up Salesforce CLI
        run: |
          npm install sfdx-cli

      # Authenticate to Salesforce Prod Org using Secrets (JWT Authentication)
      - name: Authenticate to Salesforce Prod Org (JWT Authentication)
        run: |
          echo "${{ secrets.SALESFORCE_PRIVATE_KEY }}" > private.key  # Save the private key from secrets to a local file
          sfdx force:auth:jwt:grant -i "${{ secrets.SALESFORCE_CLIENT_ID }}" -f private.key --username "${{ secrets.SALESFORCE_USERNAME }}" -r "${{ secrets.SALESFORCE_INSTANCE_URL }}" --setdefaultusername
        env:
          SALESFORCE_PRIVATE_KEY: ${{ secrets.SALESFORCE_PRIVATE_KEY }}
          SALESFORCE_USERNAME: ${{ secrets.SALESFORCE_USERNAME }}
          SALESFORCE_CLIENT_ID: ${{ secrets.SALESFORCE_CLIENT_ID }}
          SALESFORCE_INSTANCE_URL: ${{ secrets.SALESFORCE_INSTANCE_URL }}

      # Validate Salesforce Org Components
      - name: Validate Salesforce Org Components
        run: |
          sfdx force:source:deploy --checkonly --testlevel RunLocalTests --manifest ./manifest/package.xml
