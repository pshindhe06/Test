name: Salesforce Release and Deployment

on:
  push:
    branches:
      - release/*  # Trigger on release branch creation
  workflow_dispatch:
    inputs:
      action:
        description: 'Select action to trigger'
        required: true
        type: choice
        options:
          - deploy

jobs:
 deploy-prod:
  runs-on: ubuntu-latest
  if: github.ref == 'refs/heads/release/*'  # Ensure it runs for a release branch

  steps:
    # Checkout the release branch
    - name: Checkout Release Branch
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}


    # Set up Salesforce CLI
    - name: Set up Salesforce CLI
      uses: sfdx/actions/setup-sfdx@v1
      with:
        sfdx-version: '7.x'

    # Authenticate to Salesforce Prod Org using OAuth
    - name: Authenticate to Salesforce Prod Org (OAuth)
      run: |
        sfdx auth:web:login --clientid ${{ secrets.SALESFORCE_CLIENT_ID }} --clientsecret ${{ secrets.SALESFORCE_CLIENT_SECRET }} --setdefaultusername --instanceurl https://prakash06-dev-ed.my.salesforce.com/

    # Check and Delete Pre/Post-Deployment Components
    - name: Check and Delete Pre/Post-Deployment Components
      id: Check_and_Delete_Pre_Post_Deployment_Components
      run: |
        pre_deletion_needed=false
        post_deletion_needed=false
    
        if [ -f manifest/destructiveChangesPre.xml ] && [ -s manifest/destructiveChangesPre.xml ]; then
          pre_deletion_needed=true
          echo "Pre-deployment deletion needed."
        else
          echo "No pre-deployment destructive changes found."
        fi

        if [ -f manifest/destructiveChangesPost.xml ] && [ -s manifest/destructiveChangesPost.xml ]; then
          post_deletion_needed=true
          echo "Post-deployment deletion needed."
        else
          echo "No post-deployment destructive changes found."
        fi

        echo "pre_deletion_needed=$pre_deletion_needed" >> $GITHUB_ENV
        echo "post_deletion_needed=$post_deletion_needed" >> $GITHUB_ENV

    # Delete Pre/Post Deployment Components
    - name: Delete Pre/Post Deployment Components
      run: |
        if [ "${{ env.pre_deletion_needed }}" == 'true' ] && [ "${{ env.post_deletion_needed }}" == 'false' ]; then
          echo "Deleting pre-deployment components..."
          npx sf project deploy start --manifest manifest/package.xml -o eeinfy --pre-destructive-changes manifest/destructiveChangesPre.xml
        
        elif [ "${{ env.pre_deletion_needed }}" == 'false' ] && [ "${{ env.post_deletion_needed }}" == 'true' ]; then
          echo "Deleting post-deployment components..."
          npx sf project deploy start --manifest manifest/package.xml -o eeinfy --post-destructive-changes manifest/destructiveChangesPost.xml
        
        elif [ "${{ env.pre_deletion_needed }}" == 'false' ] && [ "${{ env.post_deletion_needed }}" == 'false' ]; then
          echo "Deploying components..."
          npx sf project deploy start --manifest manifest/package.xml -o eeinfy
        
        elif [ "${{ env.pre_deletion_needed }}" == 'true' ] && [ "${{ env.post_deletion_needed }}" == 'true' ]; then
          echo "Deleting pre and post-deployment components..."
          npx sf project deploy start --manifest manifest/package.xml -o eeinfy --pre-destructive-changes manifest/destructiveChangesPre.xml --post-destructive-changes manifest/destructiveChangesPost.xml
        fi

