name: Salesforce Release and Deployment

on:
  push:
    branches:
      - demo/*  # Trigger on release branch creation
  workflow_dispatch:
    inputs:
      action:
        description: 'Select action to trigger'
        required: true
        type: choice
        options:
          - validate
          - validate and deploy

jobs:
  validate-prod:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Installing Node.js for SFDX CLI
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Set up Salesforce CLI
        run: |
          npm install @salesforce/cli --global

      - name: Authenticate to Salesforce Org (Auth File)
        run: |
          echo ${{ secrets.SFDX_DEMO }} > ./SFDX_INTEGRATION_URL.txt
          npx sfdx auth:sfdxurl:store -f ./SFDX_INTEGRATION_URL.txt -a prakash06

      - name: Extract Test Classes
        id: extract_tests
        run: |
          test_classes=$(grep -oP "<members>([A-Za-z0-9_]+)</members>" manifest/package.xml | sed -E 's/<members>(.*)<\/members>/\1/')
          test_classes=$(echo "$test_classes" | grep -i "Test")
          if [ -n "$test_classes" ]; then
            echo "test_classes=$test_classes" >> $GITHUB_ENV
          else
            echo "test_classes=" >> $GITHUB_ENV
          fi

      - name: Validate Delta Changes in Salesforce Prod Org
        id: validate_deployment
        run: |
          echo "Validating delta changes (new, modified, deleted components) in Salesforce Prod Org..."
          if [ -n "$test_classes" ]; then
            echo "Running specified tests: $test_classes"
            sf project deploy validate -x manifest/package.xml -o prakash06 --test-level RunSpecifiedTests --tests "$test_classes" --json
          else
            echo "No test classes found. Running with NoTestRun."
            sf project deploy validate -x manifest/package.xml -o prakash06 --test-level RunLocalTests --json
          fi

          # Capture the exit code of the validation process
          if [[ $? -eq 0 ]]; then
            echo "Validation successful" > validation_result.txt  # Store result in a file
          else
            echo "Validation failed" > validation_result.txt  # Store failure in a file
            exit 1
          fi

      - name: Upload Validation Result
        uses: actions/upload-artifact@v4
        with:
          name: validation-result
          path: validation_result.txt  # Upload the validation result file

  deploy-prod:
    runs-on: ubuntu-latest
    needs: validate-prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Validation Result
        uses: actions/download-artifact@v4
        with:
          name: validation-result
          path: ./  # Download the artifact to the current directory

      - name: Read Validation Result
        run: |
          echo "Reading validation result from the file..."
          validation_result=$(cat validation_result.txt)  # Read the result from the file
          echo "Validation result: $validation_result"

      - name: Deploy Validated Delta Components to Salesforce Prod Org
        run: |
          if [[ "$validation_result" == "Validation successful" ]]; then
            echo "Validation successful. Proceeding with deployment."
            sf project deploy start -x manifest/package.xml -o prakash06 --test-level RunSpecifiedTests --json
          else
            echo "Validation failed. Skipping deployment."
            exit 1
          fi
