name: Salesforce Release and Deployment

on:
  push:
    branches:
      - release/*  # Trigger on release branch creation
  workflow_dispatch:
    inputs:
      action:
        description: 'Select action to trigger'
        required: true
        type: choice
        options:
          - validate
          - deploy
          - both

jobs:
  validate-prod:
    runs-on: ubuntu-latest
    # Ensure validate-prod runs when 'validate' or 'both' is selected, or for release branches
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/release/') || github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'validate' || github.event.inputs.action == 'both' }}

    steps:
      # Checkout the release branch
      - name: Checkout Release Branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
# Explicitly fetch master branch as well
      - name: Checkout Master Branch
        run: |
          git fetch origin master:refs/remotes/origin/master  # Ensure master is fetched and available
          
 # Explicitly fetch all branches and tags
      - name: Fetch all branches and tags
        run: |
          git fetch --all
          git fetch --tags  # Ensure tags are also fetched

      # Verify available branches and refs for debugging
      - name: Verify available branches and refs
        run: |
          git branch -r  # List remote branches
          git show-ref  # Show all refs (helps verify `release/*` and `master` are present)

      # Install Node.js for SFDX CLI
      - name: 'Installing Node.js for SFDX CLI'
        uses: actions/setup-node@v4
        with:
          node-version: 21

      # Set up Salesforce CLI
      - name: Set up Salesforce CLI
        run: |
          npm install @salesforce/cli --global

      # Install sfdx-git-delta Plugin for Delta Package Generation
      - name: Install sfdx-git-delta Plugin
        run: |
          echo "Installing sfdx-git-delta plugin..."
          echo y | npx sfdx plugins:install sfdx-git-delta
          npx sfdx plugins

      # Authenticate to Salesforce Prod Org using Auth File
      - name: Authenticate to Salesforce Org (Auth File)
        run: |
          echo ${{ secrets.SFDX_DEMO }} > ./SFDX_INTEGRATION_URL.txt
          npx sfdx auth:sfdxurl:store -f ./SFDX_INTEGRATION_URL.txt -a prakash06

      # Generate Delta Package for Prod (Release vs Master)
      - name: Generate Delta Package for Prod (Release vs Master)
        run: |
          echo "Generating delta package for new, modified, and deleted components between release and master..."
          mkdir delta-package
      
          npx sfdx sgd:source:delta --to "refs/remotes/origin/master" --from "refs/remotes/origin/release" -o delta-package/ --generate-delta -s force-app/

      # Validate Delta Changes in Salesforce Prod Org
      - name: Validate Delta Changes in Salesforce Prod Org
        run: |
          echo "Validating delta changes (new, modified, deleted components) in Salesforce Prod Org..."
          mkdir -p validation-reports  # Create the folder to store reports
         
          sf deploy metadata --metadata "delta-package/package/package.xml" --checkonly --test-level RunLocalTests --resultformat json --wait 10 -o prakash06 > validation-reports/validation-report.json  # Store results as JSON


